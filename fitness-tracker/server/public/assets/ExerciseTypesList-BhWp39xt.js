import{A as p}from"./api-BOpwtc0M.js";import{_ as o,c as i,a as r,g as y,v as d,f as l,F as m,h as x,o as a,t as u}from"./index-BLfcvYJG.js";const T={name:"ExerciseTypesList",data(){return{exerciseTypes:[],newExerciseType:{name:""}}},async mounted(){await this.fetchExerciseTypes()},methods:{async fetchExerciseTypes(){try{const{data:s}=await p.get("/exercise-types");this.exerciseTypes=s}catch(s){alert("Error fetching exercise types: "+s.message)}},async addExerciseType(){const s=this.newExerciseType.name.trim();if(!s)return alert("Please enter a valid exercise type name.");try{await p.post("/exercise-types",{name:s}),this.newExerciseType.name="",await this.fetchExerciseTypes()}catch(e){alert("Error adding exercise type: "+e.message)}}}},E={class:"exercise-types-page"},f={key:0,class:"types-list"},h={key:1,class:"empty-message"};function w(s,e,g,_,n,c){return a(),i("div",E,[e[3]||(e[3]=r("h2",null,"Exercise Types",-1)),r("form",{onSubmit:e[1]||(e[1]=l((...t)=>c.addExerciseType&&c.addExerciseType(...t),["prevent"])),class:"form"},[y(r("input",{"onUpdate:modelValue":e[0]||(e[0]=t=>n.newExerciseType.name=t),placeholder:"New Exercise Type",required:""},null,512),[[d,n.newExerciseType.name]]),e[2]||(e[2]=r("button",{type:"submit"},"Add",-1))],32),n.exerciseTypes.length?(a(),i("div",f,[r("ul",null,[(a(!0),i(m,null,x(n.exerciseTypes,t=>(a(),i("li",{key:t._id},[r("span",null,u(t.name),1)]))),128))])])):(a(),i("p",h,"No exercise types added yet."))])}const N=o(T,[["render",w],["__scopeId","data-v-3451853a"]]);export{N as default};
//# sourceMappingURL=ExerciseTypesList-BhWp39xt.js.map
