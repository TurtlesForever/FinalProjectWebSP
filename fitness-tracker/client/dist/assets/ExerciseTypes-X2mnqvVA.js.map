{"version":3,"file":"ExerciseTypes-X2mnqvVA.js","sources":["../../src/views/ExerciseTypes.vue"],"sourcesContent":["<template>\n  <div class=\"exercise-types\">\n    <h2>Exercise Types</h2>\n\n    <button @click=\"toggleForm\" class=\"toggle-btn\">\n      {{ showCreateForm ? 'Cancel' : 'Create Exercise Type' }}\n    </button>\n\n    <form v-if=\"showCreateForm\" @submit.prevent=\"createExerciseType\" class=\"form\">\n      <input v-model=\"newExerciseType.name\" placeholder=\"Exercise Type\" required />\n      <button type=\"submit\" class=\"submit-btn\">Create</button>\n    </form>\n\n    <ul v-if=\"exerciseTypes.length\" class=\"exercise-list\">\n      <li v-for=\"exercise in exerciseTypes\" :key=\"exercise._id\">\n        {{ exercise.name }}\n        <div class=\"btn-group\">\n          <button class=\"edit-btn\" @click=\"editExerciseType(exercise)\">Edit</button>\n          <button class=\"delete-btn\" @click=\"deleteExerciseType(exercise._id)\">Delete</button>\n        </div>\n      </li>\n    </ul>\n\n    <form v-if=\"editing\" @submit.prevent=\"updateExerciseType\" class=\"form\">\n      <input v-model=\"editedExerciseType.name\" required />\n      <button type=\"submit\" class=\"submit-btn\">Update</button>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport API from '@/api';\n\nconst exerciseTypes = ref([]);\nconst showCreateForm = ref(false);\nconst newExerciseType = ref({ name: '' });\nconst editedExerciseType = ref({ name: '', _id: '' });\nconst editing = ref(false);\n\nconst toggleForm = () => (showCreateForm.value = !showCreateForm.value);\n\nconst fetchExerciseTypes = async () => {\n  try {\n    const res = await API.get('/exercise-types');\n    exerciseTypes.value = res.data;\n  } catch (err) {\n    console.error('Error fetching exercise types:', err);\n  }\n};\n\nconst createExerciseType = async () => {\n  try {\n    const res = await API.post('/exercise-types', newExerciseType.value);\n    exerciseTypes.value.push(res.data);\n    newExerciseType.value = { name: '' };\n    showCreateForm.value = false;\n  } catch (err) {\n    console.error('Error creating exercise type:', err);\n  }\n};\n\nconst editExerciseType = (exercise) => {\n  editedExerciseType.value = { ...exercise };\n  editing.value = true;\n};\n\nconst updateExerciseType = async () => {\n  try {\n    const res = await API.put(`/exercise-types/${editedExerciseType.value._id}`, editedExerciseType.value);\n    const index = exerciseTypes.value.findIndex(ex => ex._id === res.data._id);\n    exerciseTypes.value.splice(index, 1, res.data);\n    editing.value = false;\n    editedExerciseType.value = { name: '', _id: '' };\n  } catch (err) {\n    console.error('Error updating exercise type:', err);\n  }\n};\n\nconst deleteExerciseType = async (id) => {\n  try {\n    await API.delete(`/exercise-types/${id}`);\n    exerciseTypes.value = exerciseTypes.value.filter(ex => ex._id !== id);\n  } catch (err) {\n    console.error('Error deleting exercise type:', err);\n  }\n};\n\nonMounted(fetchExerciseTypes);\n</script>\n\n<style scoped>\n.exercise-types {\n  padding: 2rem;\n  color: var(--text-color);\n  background-color: #1e1e1e;\n  border-radius: 8px;\n}\n\n.exercise-list {\n  list-style: none;\n  padding: 0;\n  margin-top: 1rem;\n}\n\n.exercise-list li {\n  background-color: #2a2a2a;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  border-radius: 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.btn-group {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.form {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\ninput {\n  padding: 0.8rem;\n  font-size: 1rem;\n  border-radius: 4px;\n  border: 1px solid #555;\n  background-color: #2a2a2a;\n  color: var(--text-color);\n}\n\nbutton {\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\nbutton.submit-btn {\n  background-color: #1e90ff;\n}\n\nbutton.submit-btn:hover {\n  background-color: #007bff;\n}\n\nbutton.toggle-btn {\n  background-color: #6c63ff;\n}\n\nbutton.toggle-btn:hover {\n  background-color: #574fd6;\n}\n\nbutton.edit-btn {\n  background-color: #4caf50;\n}\n\nbutton.edit-btn:hover {\n  background-color: #3d8b40;\n}\n\nbutton.delete-btn {\n  background-color: #ff5c5c;\n}\n\nbutton.delete-btn:hover {\n  background-color: #e64545;\n}\n</style>"],"names":["exerciseTypes","ref","showCreateForm","newExerciseType","editedExerciseType","editing","toggleForm","fetchExerciseTypes","res","API","err","createExerciseType","editExerciseType","exercise","updateExerciseType","index","ex","deleteExerciseType","id","onMounted"],"mappings":"+TAkCA,MAAMA,EAAgBC,EAAI,EAAE,EACtBC,EAAiBD,EAAI,EAAK,EAC1BE,EAAkBF,EAAI,CAAE,KAAM,EAAE,CAAE,EAClCG,EAAqBH,EAAI,CAAE,KAAM,GAAI,IAAK,GAAI,EAC9CI,EAAUJ,EAAI,EAAK,EAEnBK,EAAa,IAAOJ,EAAe,MAAQ,CAACA,EAAe,MAE3DK,EAAqB,SAAY,CACrC,GAAI,CACF,MAAMC,EAAM,MAAMC,EAAI,IAAI,iBAAiB,EAC3CT,EAAc,MAAQQ,EAAI,IAC3B,OAAQE,EAAK,CACZ,QAAQ,MAAM,iCAAkCA,CAAG,CACvD,CACA,EAEMC,EAAqB,SAAY,CACrC,GAAI,CACF,MAAMH,EAAM,MAAMC,EAAI,KAAK,kBAAmBN,EAAgB,KAAK,EACnEH,EAAc,MAAM,KAAKQ,EAAI,IAAI,EACjCL,EAAgB,MAAQ,CAAE,KAAM,EAAI,EACpCD,EAAe,MAAQ,EACxB,OAAQQ,EAAK,CACZ,QAAQ,MAAM,gCAAiCA,CAAG,CACtD,CACA,EAEME,EAAoBC,GAAa,CACrCT,EAAmB,MAAQ,CAAE,GAAGS,CAAU,EAC1CR,EAAQ,MAAQ,EAClB,EAEMS,EAAqB,SAAY,CACrC,GAAI,CACF,MAAMN,EAAM,MAAMC,EAAI,IAAI,mBAAmBL,EAAmB,MAAM,GAAG,GAAIA,EAAmB,KAAK,EAC/FW,EAAQf,EAAc,MAAM,UAAUgB,GAAMA,EAAG,MAAQR,EAAI,KAAK,GAAG,EACzER,EAAc,MAAM,OAAOe,EAAO,EAAGP,EAAI,IAAI,EAC7CH,EAAQ,MAAQ,GAChBD,EAAmB,MAAQ,CAAE,KAAM,GAAI,IAAK,EAAI,CACjD,OAAQM,EAAK,CACZ,QAAQ,MAAM,gCAAiCA,CAAG,CACtD,CACA,EAEMO,EAAqB,MAAOC,GAAO,CACvC,GAAI,CACF,MAAMT,EAAI,OAAO,mBAAmBS,CAAE,EAAE,EACxClB,EAAc,MAAQA,EAAc,MAAM,OAAOgB,GAAMA,EAAG,MAAQE,CAAE,CACrE,OAAQR,EAAK,CACZ,QAAQ,MAAM,gCAAiCA,CAAG,CACtD,CACA,EAEA,OAAAS,EAAUZ,CAAkB"}